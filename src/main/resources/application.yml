spring:
  datasource:
    url: jdbc:h2:mem:test;DATABASE_TO_LOWER=true
  jpa:
    defer-datasource-initialization: true
    properties:
      hibernate:
        naming:
          implicit-strategy:  org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
          #          physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
          #          physical-strategy: org.hibernate.boot.model.naming.SpringPhysicalNamingStrategy
          physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        ddl-auto: none
        hbm2ddl:
          auto: none
        show_sql: true
        format_sql: true
        open-in-view: false
        globally_quoted_identifiers: true
  sql:
    init:
      schema-locations:
        - classpath:/sql/schema.sql
      #        - classpath:org/springframework/security/core/userdetails/jdbc/users.ddl
      data-locations: classpath:/sql/data.sql
      encoding: UTF-8
  h2:
    console:
      enabled: true
  session:
    store-type: jdbc
  output:
    ansi:
      enabled: DETECT
logging:
  pattern:
    console: "[%level] %d [U:%X{traceId:--}] %logger : %msg%n"
    file: "[%level] %d [P:${PID:- }] [U:%X{traceId:--}] [T:%t] %-40.40logger{39} : %m%n"
  level:
    root: ERROR
    org.gradle: ERROR
#    java.sql: DEBUG
    org:
#      gradle: ERROR
#      springframework:
#        web:
#          servlet.DispatcherServlet: DEBUG
#      hibernate:
#        type: TRACE
    kr.co.hrmanager: DEBUG

jwt:
  private:
    key: classpath:/key/app.key
  public:
    key: classpath:/key/app.pub

server:
  port: 8090

api:
  version: 1.0
  description: Admin API
  server:
    url: http://localhost:${server.port}
    description: Local
